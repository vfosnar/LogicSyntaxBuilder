reference:
use build/adder_32bit.json as adder_32bit

define:
; IO
in enable[1]
in in_BUS[32]
in in_TMP[32]
in ctrl[12]

out out_BUS[32]
e_BUS[32]

; Internal
e_ADD[32]
e_SUB[32]
e_AND[32]
e_ORR[32]
e_XOR[32]
e_ROL[32]
e_ROR[32]
e_SHL[32]
e_SHR[32]
e_INC[32]
e_DEC[32]
e_NOT[32]

out_ADD[32]
out_SUB[32]
out_AND[32]
out_ORR[32]
out_XOR[32]
out_ROL[32]
out_ROR[32]
out_SHL[32]
out_SHR[32]
out_INC[32]
out_DEC[32]
out_NOT[32]

proc_SUB[32]

assign:

; BUS OUTPUT
@*
out_BUS <= and enable e_BUS
*@
e_BUS <= or e_ADD e_SUB e_AND e_ORR e_XOR e_ROL e_ROR e_SHL e_SHR e_INC e_DEC e_NOT

; CONTROL ENABLE
@*
e_ADD <= and ctrl[0] out_ADD
e_SUB <= and ctrl[1] out_SUB
e_AND <= and ctrl[2] out_AND
e_ORR <= and ctrl[3] out_ORR
e_XOR <= and ctrl[4] out_XOR
e_ROL <= and ctrl[5] out_ROL
e_ROR <= and ctrl[6] out_ROR
e_SHL <= and ctrl[7] out_SHL
e_SHR <= and ctrl[8] out_SHR
e_INC <= and ctrl[9] out_INC
e_DEC <= and ctrl[10] out_DEC
e_NOT <= and ctrl[11] out_NOT
*@

; ADD
adder_32bit
{
    to _a <= in_BUS[0:32]
    to _b <= in_TMP[0:32]
    exp out_ADD <= _s
}
; SUB
adder_32bit
{
    to _a <= nor in_TMP[0:32]
    to _b <= 1
    exp proc_SUB <= _s
}
adder_32bit
{
    to _a <= proc_SUB
    to _b <= in_BUS[0:32]
    exp out_SUB <= _s
}
; AND
out_AND <= and in_TMP[0:32] in_BUS[0:32]
; OR
out_ORR <= or in_TMP[0:32] in_BUS[0:32]
; XOR
out_XOR <= xor in_TMP[0:32] in_BUS[0:32]
; ROL
out_ROL[0] <= and in_BUS[31] 1
out_ROL[1:32] <= and in_BUS[0:31] 1
; ROR
out_ROR[0:31] <= and in_BUS[1:32] 1
out_ROR[31] <= and in_BUS[0] 1
; SHL
out_SHL[1:32] <= and in_BUS[0:31] 1
; SHR
out_SHR[0:31] <= and in_BUS[1:32] 1

; INC
adder_32bit
{
    to _a <= in_BUS[0:32]
    to _b <= 1
    exp out_INC <= _s
}
; DEC
adder_32bit
{
    to _a <= in_BUS[0:32]
    to _b <= 255
    exp out_DEC <= _s
}
; NOT
out_NOT <= nor in_BUS[0:32]